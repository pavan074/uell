import { Storage } from '@ionic/storage-angular';
import { CacheConfig } from '../../interfaces/cache-config.interface';
import { StorageCacheItem } from '../../interfaces/cache-storage-item.interface';
import * as i0 from "@angular/core";
export declare class CacheStorageService {
    private storage;
    private config;
    constructor(storage: Storage, config: CacheConfig);
    create(): Promise<Storage>;
    set(key: string, value: any): Promise<any>;
    remove(key: string): Promise<any>;
    get(key: string): Promise<any>;
    exists(key: string): Promise<boolean>;
    all(): Promise<StorageCacheItem[]>;
    /**
     * Returns whether or not an object is a cached item.
     */
    private isCachedItem;
    /**
     * Makes sure that the key is prefixed properly
     */
    private buildKey;
    /**
     * Makes sure that the key isn't prefixed
     */
    private debuildKey;
    static ɵfac: i0.ɵɵFactoryDeclaration<CacheStorageService, never>;
    static ɵprov: i0.ɵɵInjectableDeclaration<CacheStorageService>;
}
//# sourceMappingURL=cache-storage.service.d.ts.map