import { __awaiter } from "tslib";
import { HttpResponse } from '@angular/common/http';
import { isHttpResponse } from './is-http-response.helper';
import { isJsOrResponseType } from './is-js-or-response-type.helper';
export function decodeRawData(data) {
    return __awaiter(this, void 0, void 0, function* () {
        const dataJson = JSON.parse(data.value);
        if (isJsOrResponseType(data)) {
            if (isHttpResponse(dataJson)) {
                const response = {
                    body: dataJson._body || dataJson.body,
                    status: dataJson.status,
                    headers: dataJson.headers,
                    statusText: dataJson.statusText,
                    url: dataJson.url
                };
                return new HttpResponse(response);
            }
            return dataJson;
        }
        else {
            // Technique derived from: https://stackoverflow.com/a/36183085
            const response = yield fetch(dataJson);
            return response.blob();
        }
    });
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGVjb2RlLXJhdy1kYXRhLmhlbHBlci5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL2lvbmljLWNhY2hlL3NyYy9saWIvaGVscGVycy9kZWNvZGUtcmF3LWRhdGEuaGVscGVyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0sc0JBQXNCLENBQUM7QUFFcEQsT0FBTyxFQUFFLGNBQWMsRUFBRSxNQUFNLDJCQUEyQixDQUFDO0FBQzNELE9BQU8sRUFBRSxrQkFBa0IsRUFBRSxNQUFNLGlDQUFpQyxDQUFDO0FBRXJFLE1BQU0sVUFBZ0IsYUFBYSxDQUFDLElBQXNCOztRQUN0RCxNQUFNLFFBQVEsR0FBRyxJQUFJLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQztRQUN4QyxJQUFJLGtCQUFrQixDQUFDLElBQUksQ0FBQyxFQUFFO1lBQzFCLElBQUksY0FBYyxDQUFDLFFBQVEsQ0FBQyxFQUFFO2dCQUMxQixNQUFNLFFBQVEsR0FBUTtvQkFDbEIsSUFBSSxFQUFFLFFBQVEsQ0FBQyxLQUFLLElBQUksUUFBUSxDQUFDLElBQUk7b0JBQ3JDLE1BQU0sRUFBRSxRQUFRLENBQUMsTUFBTTtvQkFDdkIsT0FBTyxFQUFFLFFBQVEsQ0FBQyxPQUFPO29CQUN6QixVQUFVLEVBQUUsUUFBUSxDQUFDLFVBQVU7b0JBQy9CLEdBQUcsRUFBRSxRQUFRLENBQUMsR0FBRztpQkFDcEIsQ0FBQztnQkFFRixPQUFPLElBQUksWUFBWSxDQUFDLFFBQVEsQ0FBQyxDQUFDO2FBQ3JDO1lBRUQsT0FBTyxRQUFRLENBQUM7U0FDbkI7YUFBTTtZQUNILCtEQUErRDtZQUMvRCxNQUFNLFFBQVEsR0FBRyxNQUFNLEtBQUssQ0FBQyxRQUFRLENBQUMsQ0FBQztZQUV2QyxPQUFPLFFBQVEsQ0FBQyxJQUFJLEVBQUUsQ0FBQztTQUMxQjtJQUNMLENBQUM7Q0FBQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEh0dHBSZXNwb25zZSB9IGZyb20gJ0Bhbmd1bGFyL2NvbW1vbi9odHRwJztcbmltcG9ydCB7IFN0b3JhZ2VDYWNoZUl0ZW0gfSBmcm9tICcuLi9pbnRlcmZhY2VzL2NhY2hlLXN0b3JhZ2UtaXRlbS5pbnRlcmZhY2UnO1xuaW1wb3J0IHsgaXNIdHRwUmVzcG9uc2UgfSBmcm9tICcuL2lzLWh0dHAtcmVzcG9uc2UuaGVscGVyJztcbmltcG9ydCB7IGlzSnNPclJlc3BvbnNlVHlwZSB9IGZyb20gJy4vaXMtanMtb3ItcmVzcG9uc2UtdHlwZS5oZWxwZXInO1xuXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gZGVjb2RlUmF3RGF0YShkYXRhOiBTdG9yYWdlQ2FjaGVJdGVtKTogUHJvbWlzZTxhbnk+IHtcbiAgICBjb25zdCBkYXRhSnNvbiA9IEpTT04ucGFyc2UoZGF0YS52YWx1ZSk7XG4gICAgaWYgKGlzSnNPclJlc3BvbnNlVHlwZShkYXRhKSkge1xuICAgICAgICBpZiAoaXNIdHRwUmVzcG9uc2UoZGF0YUpzb24pKSB7XG4gICAgICAgICAgICBjb25zdCByZXNwb25zZTogYW55ID0ge1xuICAgICAgICAgICAgICAgIGJvZHk6IGRhdGFKc29uLl9ib2R5IHx8IGRhdGFKc29uLmJvZHksXG4gICAgICAgICAgICAgICAgc3RhdHVzOiBkYXRhSnNvbi5zdGF0dXMsXG4gICAgICAgICAgICAgICAgaGVhZGVyczogZGF0YUpzb24uaGVhZGVycyxcbiAgICAgICAgICAgICAgICBzdGF0dXNUZXh0OiBkYXRhSnNvbi5zdGF0dXNUZXh0LFxuICAgICAgICAgICAgICAgIHVybDogZGF0YUpzb24udXJsXG4gICAgICAgICAgICB9O1xuXG4gICAgICAgICAgICByZXR1cm4gbmV3IEh0dHBSZXNwb25zZShyZXNwb25zZSk7XG4gICAgICAgIH1cblxuICAgICAgICByZXR1cm4gZGF0YUpzb247XG4gICAgfSBlbHNlIHtcbiAgICAgICAgLy8gVGVjaG5pcXVlIGRlcml2ZWQgZnJvbTogaHR0cHM6Ly9zdGFja292ZXJmbG93LmNvbS9hLzM2MTgzMDg1XG4gICAgICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgZmV0Y2goZGF0YUpzb24pO1xuXG4gICAgICAgIHJldHVybiByZXNwb25zZS5ibG9iKCk7XG4gICAgfVxufVxuIl19